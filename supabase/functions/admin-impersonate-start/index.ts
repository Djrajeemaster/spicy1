import { serve } from 'https://deno.land/std@0.224.0/http/server.ts';
import { requireAdmin } from '../_shared/admin-guard/index.ts';
function json(o:any,s=200){return new Response(JSON.stringify(o),{status:s,headers:{'content-type':'application/json'}});}
function randToken(n=48){const a='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';let s='';for(let i=0;i<n;i++) s+=a[Math.floor(Math.random()*a.length)];return s;}
serve(async (req)=>{try{if(req.method!=='POST')return json({error:'method_not_allowed'},405);const ctx=await requireAdmin(req);const {target_user_id,ttl_minutes}=await req.json();if(!target_user_id)return json({error:'missing_target'},400);const ttl=Math.max(1,Math.min(60,Number(ttl_minutes)||10));const validUntil=new Date(Date.now()+ttl*60000).toISOString();const token=randToken(48);const {error}=await ctx.supabase.from('impersonation_sessions').insert({admin_id:ctx.userId,target_user_id,token,valid_until:validUntil});if(error)return json({error:'db_error'},500);return json({token,valid_until:validUntil});}catch(e){if(e instanceof Response) return e;console.error('admin-impersonate-start error',e);return json({error:'internal'},500);}});
